//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace servicio
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class restaurantEntities : DbContext
    {
        public restaurantEntities()
            : base("name=restaurantEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Detalle_Orden> Detalle_Orden { get; set; }
        public virtual DbSet<Detalle_Proveedor> Detalle_Proveedor { get; set; }
        public virtual DbSet<Detalle_Receta> Detalle_Receta { get; set; }
        public virtual DbSet<Detalle_Solicitud> Detalle_Solicitud { get; set; }
        public virtual DbSet<Dificultad> Dificultad { get; set; }
        public virtual DbSet<Estado_Orden> Estado_Orden { get; set; }
        public virtual DbSet<Estado_Reserva_Online> Estado_Reserva_Online { get; set; }
        public virtual DbSet<Estado_Solicitud> Estado_Solicitud { get; set; }
        public virtual DbSet<Insumo> Insumo { get; set; }
        public virtual DbSet<Log_Financiero> Log_Financiero { get; set; }
        public virtual DbSet<Mesa> Mesa { get; set; }
        public virtual DbSet<Orden> Orden { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Receta> Receta { get; set; }
        public virtual DbSet<Reserva> Reserva { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Solicitud> Solicitud { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tipo_Movimiento> Tipo_Movimiento { get; set; }
        public virtual DbSet<Tipo_Receta> Tipo_Receta { get; set; }
        public virtual DbSet<Tipo_Reserva> Tipo_Reserva { get; set; }
        public virtual DbSet<Unidad_Medida> Unidad_Medida { get; set; }
        public virtual DbSet<Saldo> Saldo { get; set; }
        public virtual DbSet<V_LISTAR_DETALLE_ORDEN> V_LISTAR_DETALLE_ORDEN { get; set; }
        public virtual DbSet<V_LISTAR_DIFICULTAD> V_LISTAR_DIFICULTAD { get; set; }
        public virtual DbSet<V_LISTAR_INSUMOS> V_LISTAR_INSUMOS { get; set; }
        public virtual DbSet<V_LISTAR_MESAS> V_LISTAR_MESAS { get; set; }
        public virtual DbSet<V_LISTAR_ORDENES> V_LISTAR_ORDENES { get; set; }
        public virtual DbSet<V_LISTAR_ORDENES_A_COCINA> V_LISTAR_ORDENES_A_COCINA { get; set; }
        public virtual DbSet<V_LISTAR_ORDENES_SIN_PAGAR> V_LISTAR_ORDENES_SIN_PAGAR { get; set; }
        public virtual DbSet<V_LISTAR_PLATOS_RESUMEN> V_LISTAR_PLATOS_RESUMEN { get; set; }
        public virtual DbSet<V_LISTAR_RECETAS> V_LISTAR_RECETAS { get; set; }
        public virtual DbSet<V_LISTAR_TIPO_RECETA> V_LISTAR_TIPO_RECETA { get; set; }
        public virtual DbSet<V_LISTAR_UNIDAD_MEDIDA> V_LISTAR_UNIDAD_MEDIDA { get; set; }
    
        [DbFunction("restaurantEntities", "F_DETALLE_DE_ORDEN")]
        public virtual IQueryable<F_DETALLE_DE_ORDEN_Result> F_DETALLE_DE_ORDEN(Nullable<int> orden)
        {
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_DETALLE_DE_ORDEN_Result>("[restaurantEntities].[F_DETALLE_DE_ORDEN](@Orden)", ordenParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_DETALLE_DE_RECETAS_BY_RECETA")]
        public virtual IQueryable<F_LISTA_DE_DETALLE_DE_RECETAS_BY_RECETA_Result> F_LISTA_DE_DETALLE_DE_RECETAS_BY_RECETA(Nullable<short> receta)
        {
            var recetaParameter = receta.HasValue ?
                new ObjectParameter("Receta", receta) :
                new ObjectParameter("Receta", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_DETALLE_DE_RECETAS_BY_RECETA_Result>("[restaurantEntities].[F_LISTA_DE_DETALLE_DE_RECETAS_BY_RECETA](@Receta)", recetaParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_DIFICULTADES")]
        public virtual IQueryable<F_LISTA_DE_DIFICULTADES_Result> F_LISTA_DE_DIFICULTADES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_DIFICULTADES_Result>("[restaurantEntities].[F_LISTA_DE_DIFICULTADES]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_INSUMOS")]
        public virtual IQueryable<F_LISTA_DE_INSUMOS_Result> F_LISTA_DE_INSUMOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_INSUMOS_Result>("[restaurantEntities].[F_LISTA_DE_INSUMOS]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_MESAS")]
        public virtual IQueryable<F_LISTA_DE_MESAS_Result> F_LISTA_DE_MESAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_MESAS_Result>("[restaurantEntities].[F_LISTA_DE_MESAS]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_MESAS_LIBRES")]
        public virtual IQueryable<F_LISTA_DE_MESAS_LIBRES_Result> F_LISTA_DE_MESAS_LIBRES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_MESAS_LIBRES_Result>("[restaurantEntities].[F_LISTA_DE_MESAS_LIBRES]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_MESAS_OCUPADAS")]
        public virtual IQueryable<F_LISTA_DE_MESAS_OCUPADAS_Result> F_LISTA_DE_MESAS_OCUPADAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_MESAS_OCUPADAS_Result>("[restaurantEntities].[F_LISTA_DE_MESAS_OCUPADAS]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_ORDENES")]
        public virtual IQueryable<F_LISTA_DE_ORDENES_Result> F_LISTA_DE_ORDENES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_ORDENES_Result>("[restaurantEntities].[F_LISTA_DE_ORDENES]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_ORDENES_DIA")]
        public virtual IQueryable<F_LISTA_DE_ORDENES_DIA_Result> F_LISTA_DE_ORDENES_DIA(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_ORDENES_DIA_Result>("[restaurantEntities].[F_LISTA_DE_ORDENES_DIA](@Fecha)", fechaParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_ORDENES_EN_COCINA")]
        public virtual IQueryable<F_LISTA_DE_ORDENES_EN_COCINA_Result> F_LISTA_DE_ORDENES_EN_COCINA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_ORDENES_EN_COCINA_Result>("[restaurantEntities].[F_LISTA_DE_ORDENES_EN_COCINA]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_ORDENES_EN_COCINA_POR_MESA")]
        public virtual IQueryable<F_LISTA_DE_ORDENES_EN_COCINA_POR_MESA_Result> F_LISTA_DE_ORDENES_EN_COCINA_POR_MESA(Nullable<short> mesa)
        {
            var mesaParameter = mesa.HasValue ?
                new ObjectParameter("mesa", mesa) :
                new ObjectParameter("mesa", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_ORDENES_EN_COCINA_POR_MESA_Result>("[restaurantEntities].[F_LISTA_DE_ORDENES_EN_COCINA_POR_MESA](@mesa)", mesaParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_ORDENES_MES")]
        public virtual IQueryable<F_LISTA_DE_ORDENES_MES_Result> F_LISTA_DE_ORDENES_MES(Nullable<byte> mes, Nullable<short> anio)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(byte));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_ORDENES_MES_Result>("[restaurantEntities].[F_LISTA_DE_ORDENES_MES](@Mes, @Anio)", mesParameter, anioParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_ORDENES_SIN_PAGAR")]
        public virtual IQueryable<F_LISTA_DE_ORDENES_SIN_PAGAR_Result> F_LISTA_DE_ORDENES_SIN_PAGAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_ORDENES_SIN_PAGAR_Result>("[restaurantEntities].[F_LISTA_DE_ORDENES_SIN_PAGAR]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_ORDENES_SIN_PAGAR_POR_MESA")]
        public virtual IQueryable<F_LISTA_DE_ORDENES_SIN_PAGAR_POR_MESA_Result> F_LISTA_DE_ORDENES_SIN_PAGAR_POR_MESA(Nullable<int> mesa)
        {
            var mesaParameter = mesa.HasValue ?
                new ObjectParameter("mesa", mesa) :
                new ObjectParameter("mesa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_ORDENES_SIN_PAGAR_POR_MESA_Result>("[restaurantEntities].[F_LISTA_DE_ORDENES_SIN_PAGAR_POR_MESA](@mesa)", mesaParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_PLATOS_RESUMEN")]
        public virtual IQueryable<F_LISTA_DE_PLATOS_RESUMEN_Result> F_LISTA_DE_PLATOS_RESUMEN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_PLATOS_RESUMEN_Result>("[restaurantEntities].[F_LISTA_DE_PLATOS_RESUMEN]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_PLATOS_RESUMEN_DIA")]
        public virtual IQueryable<F_LISTA_DE_PLATOS_RESUMEN_DIA_Result> F_LISTA_DE_PLATOS_RESUMEN_DIA(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_PLATOS_RESUMEN_DIA_Result>("[restaurantEntities].[F_LISTA_DE_PLATOS_RESUMEN_DIA](@Fecha)", fechaParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_PLATOS_RESUMEN_MES")]
        public virtual IQueryable<F_LISTA_DE_PLATOS_RESUMEN_MES_Result> F_LISTA_DE_PLATOS_RESUMEN_MES(Nullable<byte> mes, Nullable<short> anio)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(byte));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_PLATOS_RESUMEN_MES_Result>("[restaurantEntities].[F_LISTA_DE_PLATOS_RESUMEN_MES](@Mes, @Anio)", mesParameter, anioParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_RECETAS_COMPLETA")]
        public virtual IQueryable<F_LISTA_DE_RECETAS_COMPLETA_Result> F_LISTA_DE_RECETAS_COMPLETA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_RECETAS_COMPLETA_Result>("[restaurantEntities].[F_LISTA_DE_RECETAS_COMPLETA]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_RECETAS_MENU")]
        public virtual IQueryable<F_LISTA_DE_RECETAS_MENU_Result> F_LISTA_DE_RECETAS_MENU()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_RECETAS_MENU_Result>("[restaurantEntities].[F_LISTA_DE_RECETAS_MENU]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_RECETAS_MENU_TIPO")]
        public virtual IQueryable<F_LISTA_DE_RECETAS_MENU_TIPO_Result> F_LISTA_DE_RECETAS_MENU_TIPO(Nullable<byte> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_RECETAS_MENU_TIPO_Result>("[restaurantEntities].[F_LISTA_DE_RECETAS_MENU_TIPO](@tipo)", tipoParameter);
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_TIPOS_DE_RECETAS")]
        public virtual IQueryable<F_LISTA_DE_TIPOS_DE_RECETAS_Result> F_LISTA_DE_TIPOS_DE_RECETAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_TIPOS_DE_RECETAS_Result>("[restaurantEntities].[F_LISTA_DE_TIPOS_DE_RECETAS]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DE_UNIDADES_DE_MEDIDAS")]
        public virtual IQueryable<F_LISTA_DE_UNIDADES_DE_MEDIDAS_Result> F_LISTA_DE_UNIDADES_DE_MEDIDAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DE_UNIDADES_DE_MEDIDAS_Result>("[restaurantEntities].[F_LISTA_DE_UNIDADES_DE_MEDIDAS]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTA_DETALLE_ORDEN")]
        public virtual IQueryable<F_LISTA_DETALLE_ORDEN_Result> F_LISTA_DETALLE_ORDEN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTA_DETALLE_ORDEN_Result>("[restaurantEntities].[F_LISTA_DETALLE_ORDEN]()");
        }
    
        [DbFunction("restaurantEntities", "F_LISTAR_RECETAS")]
        public virtual IQueryable<F_LISTAR_RECETAS_Result> F_LISTAR_RECETAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_LISTAR_RECETAS_Result>("[restaurantEntities].[F_LISTAR_RECETAS]()");
        }
    
        [DbFunction("restaurantEntities", "F_OBTENER_PERSONA")]
        public virtual IQueryable<F_OBTENER_PERSONA_Result> F_OBTENER_PERSONA(Nullable<int> run)
        {
            var runParameter = run.HasValue ?
                new ObjectParameter("Run", run) :
                new ObjectParameter("Run", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_OBTENER_PERSONA_Result>("[restaurantEntities].[F_OBTENER_PERSONA](@Run)", runParameter);
        }
    
        [DbFunction("restaurantEntities", "F_RESUMEN_CLIENTES_DIA")]
        public virtual IQueryable<F_RESUMEN_CLIENTES_DIA_Result> F_RESUMEN_CLIENTES_DIA(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_RESUMEN_CLIENTES_DIA_Result>("[restaurantEntities].[F_RESUMEN_CLIENTES_DIA](@Fecha)", fechaParameter);
        }
    
        [DbFunction("restaurantEntities", "F_RESUMEN_CLIENTES_MES")]
        public virtual IQueryable<F_RESUMEN_CLIENTES_MES_Result> F_RESUMEN_CLIENTES_MES(Nullable<byte> mes, Nullable<short> anio)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(byte));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_RESUMEN_CLIENTES_MES_Result>("[restaurantEntities].[F_RESUMEN_CLIENTES_MES](@Mes, @Anio)", mesParameter, anioParameter);
        }
    
        [DbFunction("restaurantEntities", "F_RESUMEN_FINANCIERO_DIARIO")]
        public virtual IQueryable<F_RESUMEN_FINANCIERO_DIARIO_Result> F_RESUMEN_FINANCIERO_DIARIO(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_RESUMEN_FINANCIERO_DIARIO_Result>("[restaurantEntities].[F_RESUMEN_FINANCIERO_DIARIO](@Fecha)", fechaParameter);
        }
    
        [DbFunction("restaurantEntities", "F_RESUMEN_FINANCIERO_MENSUAL")]
        public virtual IQueryable<F_RESUMEN_FINANCIERO_MENSUAL_Result> F_RESUMEN_FINANCIERO_MENSUAL(Nullable<byte> mes, Nullable<short> anio)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(byte));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_RESUMEN_FINANCIERO_MENSUAL_Result>("[restaurantEntities].[F_RESUMEN_FINANCIERO_MENSUAL](@Mes, @Anio)", mesParameter, anioParameter);
        }
    
        [DbFunction("restaurantEntities", "F_RESUMEN_MESAS_DIA")]
        public virtual IQueryable<F_RESUMEN_MESAS_DIA_Result> F_RESUMEN_MESAS_DIA(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_RESUMEN_MESAS_DIA_Result>("[restaurantEntities].[F_RESUMEN_MESAS_DIA](@Fecha)", fechaParameter);
        }
    
        [DbFunction("restaurantEntities", "F_RESUMEN_MESAS_MES")]
        public virtual IQueryable<F_RESUMEN_MESAS_MES_Result> F_RESUMEN_MESAS_MES(Nullable<byte> mes, Nullable<short> anio)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(byte));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_RESUMEN_MESAS_MES_Result>("[restaurantEntities].[F_RESUMEN_MESAS_MES](@Mes, @Anio)", mesParameter, anioParameter);
        }
    
        public virtual ObjectResult<P_ACTIVAR_INSUMO_Result> P_ACTIVAR_INSUMO(Nullable<short> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTIVAR_INSUMO_Result>("P_ACTIVAR_INSUMO", idParameter);
        }
    
        public virtual ObjectResult<P_ACTIVAR_RECETA_Result> P_ACTIVAR_RECETA(Nullable<short> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTIVAR_RECETA_Result>("P_ACTIVAR_RECETA", idParameter);
        }
    
        public virtual ObjectResult<P_ACTUALIZAR_CLIENTE_Result> P_ACTUALIZAR_CLIENTE(Nullable<int> run, string nombres, string paterno, string materno, string correo, string pass)
        {
            var runParameter = run.HasValue ?
                new ObjectParameter("Run", run) :
                new ObjectParameter("Run", typeof(int));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var paternoParameter = paterno != null ?
                new ObjectParameter("Paterno", paterno) :
                new ObjectParameter("Paterno", typeof(string));
    
            var maternoParameter = materno != null ?
                new ObjectParameter("Materno", materno) :
                new ObjectParameter("Materno", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTUALIZAR_CLIENTE_Result>("P_ACTUALIZAR_CLIENTE", runParameter, nombresParameter, paternoParameter, maternoParameter, correoParameter, passParameter);
        }
    
        public virtual ObjectResult<P_ACTUALIZAR_ESTADO_ORDEN_Result> P_ACTUALIZAR_ESTADO_ORDEN(Nullable<int> id, Nullable<byte> estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTUALIZAR_ESTADO_ORDEN_Result>("P_ACTUALIZAR_ESTADO_ORDEN", idParameter, estadoParameter);
        }
    
        public virtual ObjectResult<P_ACTUALIZAR_INSUMO_Result> P_ACTUALIZAR_INSUMO(Nullable<short> id, string nombre, Nullable<byte> medida, Nullable<int> cantidad, Nullable<int> min, Nullable<int> max, Nullable<bool> estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var medidaParameter = medida.HasValue ?
                new ObjectParameter("Medida", medida) :
                new ObjectParameter("Medida", typeof(byte));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("Min", min) :
                new ObjectParameter("Min", typeof(int));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("Max", max) :
                new ObjectParameter("Max", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTUALIZAR_INSUMO_Result>("P_ACTUALIZAR_INSUMO", idParameter, nombreParameter, medidaParameter, cantidadParameter, minParameter, maxParameter, estadoParameter);
        }
    
        public virtual ObjectResult<P_ACTUALIZAR_MESA_Result> P_ACTUALIZAR_MESA(Nullable<short> id, Nullable<short> numero, Nullable<byte> capacidad, Nullable<bool> estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(short));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("Capacidad", capacidad) :
                new ObjectParameter("Capacidad", typeof(byte));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTUALIZAR_MESA_Result>("P_ACTUALIZAR_MESA", idParameter, numeroParameter, capacidadParameter, estadoParameter);
        }
    
        public virtual ObjectResult<P_ACTUALIZAR_ORDEN_PAGADA_Result> P_ACTUALIZAR_ORDEN_PAGADA(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTUALIZAR_ORDEN_PAGADA_Result>("P_ACTUALIZAR_ORDEN_PAGADA", idParameter);
        }
    
        public virtual ObjectResult<P_ACTUALIZAR_PRECIO_RECETA_Result> P_ACTUALIZAR_PRECIO_RECETA(Nullable<short> id, Nullable<int> precio)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTUALIZAR_PRECIO_RECETA_Result>("P_ACTUALIZAR_PRECIO_RECETA", idParameter, precioParameter);
        }
    
        public virtual ObjectResult<P_ACTUALIZAR_RECETA_Result> P_ACTUALIZAR_RECETA(Nullable<short> id, string nombre, Nullable<int> precio, Nullable<byte> dificultad, Nullable<byte> tipo, Nullable<bool> estado, string instruccion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            var dificultadParameter = dificultad.HasValue ?
                new ObjectParameter("Dificultad", dificultad) :
                new ObjectParameter("Dificultad", typeof(byte));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(byte));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var instruccionParameter = instruccion != null ?
                new ObjectParameter("Instruccion", instruccion) :
                new ObjectParameter("Instruccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTUALIZAR_RECETA_Result>("P_ACTUALIZAR_RECETA", idParameter, nombreParameter, precioParameter, dificultadParameter, tipoParameter, estadoParameter, instruccionParameter);
        }
    
        public virtual ObjectResult<P_ACTUALIZAR_SALDO_Result> P_ACTUALIZAR_SALDO(Nullable<int> dinero)
        {
            var dineroParameter = dinero.HasValue ?
                new ObjectParameter("Dinero", dinero) :
                new ObjectParameter("Dinero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ACTUALIZAR_SALDO_Result>("P_ACTUALIZAR_SALDO", dineroParameter);
        }
    
        public virtual ObjectResult<P_CANCELAR_RESERVA_Result> P_CANCELAR_RESERVA(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_CANCELAR_RESERVA_Result>("P_CANCELAR_RESERVA", idParameter);
        }
    
        public virtual ObjectResult<P_CREAR_ORDEN_Result> P_CREAR_ORDEN(Nullable<short> mesa, string jSON, ObjectParameter identity)
        {
            var mesaParameter = mesa.HasValue ?
                new ObjectParameter("Mesa", mesa) :
                new ObjectParameter("Mesa", typeof(short));
    
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_CREAR_ORDEN_Result>("P_CREAR_ORDEN", mesaParameter, jSONParameter, identity);
        }
    
        public virtual ObjectResult<P_CREAR_RESERVA_ONLINE_Result> P_CREAR_RESERVA_ONLINE(Nullable<short> mesa, Nullable<byte> cantidad, Nullable<int> run, Nullable<System.DateTime> fecha)
        {
            var mesaParameter = mesa.HasValue ?
                new ObjectParameter("Mesa", mesa) :
                new ObjectParameter("Mesa", typeof(short));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(byte));
    
            var runParameter = run.HasValue ?
                new ObjectParameter("Run", run) :
                new ObjectParameter("Run", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_CREAR_RESERVA_ONLINE_Result>("P_CREAR_RESERVA_ONLINE", mesaParameter, cantidadParameter, runParameter, fechaParameter);
        }
    
        public virtual ObjectResult<P_CREAR_USUARIO_Result> P_CREAR_USUARIO(Nullable<int> run, string nombres, string paterno, string materno, string correo, string pass)
        {
            var runParameter = run.HasValue ?
                new ObjectParameter("Run", run) :
                new ObjectParameter("Run", typeof(int));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var paternoParameter = paterno != null ?
                new ObjectParameter("Paterno", paterno) :
                new ObjectParameter("Paterno", typeof(string));
    
            var maternoParameter = materno != null ?
                new ObjectParameter("Materno", materno) :
                new ObjectParameter("Materno", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_CREAR_USUARIO_Result>("P_CREAR_USUARIO", runParameter, nombresParameter, paternoParameter, maternoParameter, correoParameter, passParameter);
        }
    
        public virtual ObjectResult<P_DESACTIVAR_CLIENTE_Result> P_DESACTIVAR_CLIENTE(Nullable<int> run)
        {
            var runParameter = run.HasValue ?
                new ObjectParameter("Run", run) :
                new ObjectParameter("Run", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_DESACTIVAR_CLIENTE_Result>("P_DESACTIVAR_CLIENTE", runParameter);
        }
    
        public virtual ObjectResult<P_DESACTIVAR_INSUMO_Result> P_DESACTIVAR_INSUMO(Nullable<short> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_DESACTIVAR_INSUMO_Result>("P_DESACTIVAR_INSUMO", idParameter);
        }
    
        public virtual ObjectResult<P_DESACTIVAR_RECETA_Result> P_DESACTIVAR_RECETA(Nullable<short> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_DESACTIVAR_RECETA_Result>("P_DESACTIVAR_RECETA", idParameter);
        }
    
        public virtual ObjectResult<P_DESOCUPAR_MESA_Result> P_DESOCUPAR_MESA(Nullable<short> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_DESOCUPAR_MESA_Result>("P_DESOCUPAR_MESA", idParameter);
        }
    
        public virtual ObjectResult<P_INSERTAR_INSUMO_Result> P_INSERTAR_INSUMO(string nombre, Nullable<byte> unidad_Medida, Nullable<int> cantidad, Nullable<int> stockmin, Nullable<int> stockmax)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var unidad_MedidaParameter = unidad_Medida.HasValue ?
                new ObjectParameter("Unidad_Medida", unidad_Medida) :
                new ObjectParameter("Unidad_Medida", typeof(byte));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var stockminParameter = stockmin.HasValue ?
                new ObjectParameter("Stockmin", stockmin) :
                new ObjectParameter("Stockmin", typeof(int));
    
            var stockmaxParameter = stockmax.HasValue ?
                new ObjectParameter("Stockmax", stockmax) :
                new ObjectParameter("Stockmax", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_INSERTAR_INSUMO_Result>("P_INSERTAR_INSUMO", nombreParameter, unidad_MedidaParameter, cantidadParameter, stockminParameter, stockmaxParameter);
        }
    
        public virtual ObjectResult<P_INSERTAR_LOG_FINANCIERO_Result> P_INSERTAR_LOG_FINANCIERO(Nullable<System.DateTime> fecha, Nullable<int> costo, Nullable<bool> movimiento)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("Costo", costo) :
                new ObjectParameter("Costo", typeof(int));
    
            var movimientoParameter = movimiento.HasValue ?
                new ObjectParameter("Movimiento", movimiento) :
                new ObjectParameter("Movimiento", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_INSERTAR_LOG_FINANCIERO_Result>("P_INSERTAR_LOG_FINANCIERO", fechaParameter, costoParameter, movimientoParameter);
        }
    
        public virtual ObjectResult<P_INSERTAR_MESA_Result> P_INSERTAR_MESA(Nullable<short> numero, Nullable<byte> capacidad)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(short));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("Capacidad", capacidad) :
                new ObjectParameter("Capacidad", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_INSERTAR_MESA_Result>("P_INSERTAR_MESA", numeroParameter, capacidadParameter);
        }
    
        public virtual ObjectResult<P_INSERTAR_ORDENES_Result> P_INSERTAR_ORDENES(Nullable<System.DateTime> fecha_Orden, Nullable<bool> estado, Nullable<short> mesa, string jSON)
        {
            var fecha_OrdenParameter = fecha_Orden.HasValue ?
                new ObjectParameter("Fecha_Orden", fecha_Orden) :
                new ObjectParameter("Fecha_Orden", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(bool));
    
            var mesaParameter = mesa.HasValue ?
                new ObjectParameter("Mesa", mesa) :
                new ObjectParameter("Mesa", typeof(short));
    
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_INSERTAR_ORDENES_Result>("P_INSERTAR_ORDENES", fecha_OrdenParameter, estadoParameter, mesaParameter, jSONParameter);
        }
    
        public virtual ObjectResult<P_INSERTAR_RECETA_Result> P_INSERTAR_RECETA(string nombre, Nullable<int> precio, Nullable<byte> tipo, Nullable<byte> dificultad, string jSON, string instruccion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(byte));
    
            var dificultadParameter = dificultad.HasValue ?
                new ObjectParameter("Dificultad", dificultad) :
                new ObjectParameter("Dificultad", typeof(byte));
    
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            var instruccionParameter = instruccion != null ?
                new ObjectParameter("Instruccion", instruccion) :
                new ObjectParameter("Instruccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_INSERTAR_RECETA_Result>("P_INSERTAR_RECETA", nombreParameter, precioParameter, tipoParameter, dificultadParameter, jSONParameter, instruccionParameter);
        }
    
        public virtual int P_LOGIN(Nullable<int> user, string pass, ObjectParameter boolean)
        {
            var userParameter = user.HasValue ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(int));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_LOGIN", userParameter, passParameter, boolean);
        }
    
        public virtual int P_OBTENER_ROL(Nullable<int> run, ObjectParameter rol)
        {
            var runParameter = run.HasValue ?
                new ObjectParameter("Run", run) :
                new ObjectParameter("Run", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_OBTENER_ROL", runParameter, rol);
        }
    
        public virtual ObjectResult<P_OCUPAR_MESA_CON_RESERVA_Result> P_OCUPAR_MESA_CON_RESERVA(Nullable<short> mesa, Nullable<int> reserva)
        {
            var mesaParameter = mesa.HasValue ?
                new ObjectParameter("Mesa", mesa) :
                new ObjectParameter("Mesa", typeof(short));
    
            var reservaParameter = reserva.HasValue ?
                new ObjectParameter("Reserva", reserva) :
                new ObjectParameter("Reserva", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_OCUPAR_MESA_CON_RESERVA_Result>("P_OCUPAR_MESA_CON_RESERVA", mesaParameter, reservaParameter);
        }
    
        public virtual ObjectResult<P_OCUPAR_MESA_SIN_RESERVA_Result> P_OCUPAR_MESA_SIN_RESERVA(Nullable<short> id, Nullable<byte> cantidad)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_OCUPAR_MESA_SIN_RESERVA_Result>("P_OCUPAR_MESA_SIN_RESERVA", idParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<P_REPONER_INSUMO_Result> P_REPONER_INSUMO(Nullable<short> id, Nullable<int> cantidad)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_REPONER_INSUMO_Result>("P_REPONER_INSUMO", idParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<P_REPORTE_DE_ERRORES_Result> P_REPORTE_DE_ERRORES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_REPORTE_DE_ERRORES_Result>("P_REPORTE_DE_ERRORES");
        }
    
        public virtual ObjectResult<P_RESTAR_CANTIDAD_INSUMO_Result> P_RESTAR_CANTIDAD_INSUMO(Nullable<short> id, Nullable<int> cantidad)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_RESTAR_CANTIDAD_INSUMO_Result>("P_RESTAR_CANTIDAD_INSUMO", idParameter, cantidadParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
